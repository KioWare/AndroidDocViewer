apply plugin: 'com.android.application'

android {
    signingConfigs {
        keystore {
            keyAlias getKeyAlias()
            keyPassword getKeyPassword()
            storeFile getStoreFile()
            storePassword getStorePassword()
        }
    }
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.adsi.kioware.client.mobile.pdf.app"
        minSdkVersion 14
        targetSdkVersion 16
        versionCode computeVersionCode()
        versionName "1.1"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.keystore
        }
        debug {
            signingConfig signingConfigs.keystore
        }
    }

    sourceSets {
        main.jni.srcDirs = []
        main.jniLibs.srcDir 'src/main/libs'
    }
}

def computeVersionCode() {
    if (project.hasProperty('myVersionCode')) {
        return Integer.parseInt(project.myVersionCode)
    } else {
        return 10
    }
}

def getKeyAlias() {
    if (project.hasProperty('myKeyAlias')) {
        return project.myKeyAlias
    } else {
        return ''
    }
}

def getKeyPassword() {
    if (project.hasProperty('myKeyPassword')) {
        return project.myKeyPassword
    } else {
        return ''
    }
}

def getStoreFile() {
    if (project.hasProperty('myStoreFile')) {
        return file(project.myStoreFile)
    } else {
        return file('')
    }
}

def getStorePassword() {
    if (project.hasProperty('myStorePassword')) {
        return project.myStorePassword
    } else {
        return ''
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task ndkBuild(type: Exec) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkBuild = properties.getProperty('ndk.build')
    commandLine ndkBuild, '-C', file('src/main/jni').absolutePath
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}